<?xml version="1.0" encoding="UTF-8"?>

<project name="Assignment01" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property name="ivy.install.version" value="2.4.0" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}"/>
		<echo message="installing ivy..."/>
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="xjc.package" value="people.generated_classes" />

	<target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]"/>
	</target>

	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>

	<path id="run.path.id">
		<path refid="lib.path.id" />
		<fileset dir="${build.dir}">
			<include name="*.class" />
			<include name="**/*.class" />
			<exclude name="**/*Test*" />
		</fileset>
	</path>

	<target name="init" depends="install-ivy, resolve">
		<echo message="Init has been called" />
		<mkdir dir="${build.dir}" />
		<echo message="${build.dir} has been created" />
	</target>

	<target name="clean">
		<echo message="Clean has been called" />
		<delete dir="${build.dir}" />
		<echo message="${build.dir} has been deleted" />
		<delete dir="${src.dir}/${xjc.package}" />
		<echo message="${src.dir}/${xjc.package} has been deleted" />
		<delete dir="${lib.dir}" />
		<echo message="${lib.dir} has been deleted" />
		<delete dir="ivy" />
		<echo message="ivy has been deleted" />
		<delete dir="${src.dir}/people/generated_classes" />
		<echo message="${src.dir}/people/generated_classes has been deleted" />
		<delete file="generated_people.xml" />
		<echo message="generated_people.xml has been deleted" />
		<delete file="generated_people.json" />
		<echo message="generated_people.json has been deleted" />	
	</target>

	<target name="generate" depends="init">
		<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="lib.path.id">
		</taskdef>
		<xjc schema="people.xsd" destdir="${src.dir}" package="${xjc.package}" />
	</target>

	<target name="compile" depends="init, generate">
		<echo message="Compile target has been called" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false">
		</javac>
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>
	
	<target name="execute.evaluation" depends="compile, execute.task1, execute.task2, execute.task3, execute.task4, execute.task5, execute.task6">
		<echo message="Evaluation ended"/>
	</target>

	<target name="execute.task1">
		<echo message="Executing Task 1: Make a function that prints all people in the list with details." />
		<java classname="people.myMain" classpath="${build.dir}">
			<arg value="getCompleteList"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.task2">
		<echo message="Executing Task 2: Make a function that accepts the person id as parameter and prints the ActivityPreference of the person with that id." />
		<java classname="people.myMain" classpath="${build.dir}">
			<arg value="getActivity"/>
			<arg value="0005"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="execute.task3">
		<echo message="Executing Task 3: Make a function which accepts a date and an operator as parameters and prints people which preferred activity start_date fulfill that condition."/>
		<java classname="people.myMain" classpath="${build.dir}">
			<arg value="getDateFilteredPeople"/>
			<arg value=">"/>
			<arg value="2017-13-10"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="execute.task4">
		<echo message="Executing Task 4: executing marshaling to XML. Create 3 persons using java and marshal them to XML."/>
		<java classname="people.PeopleWriter" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="execute.task5">
		<echo message="Executing Task 5: executing un-marshaling from XML."/>
		<java classname="people.PeopleReader" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="execute.task6">
		<echo message="Executing Task 6: executing marshaling to JSON. Create 3 persons using java and marshal them to JSON."/>
		<java classname="people.PeopleJson" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="execute.HPReader">
		<echo message="Executing Health Profile Reader: will read the people.xml in home folder and print one at a time" />
		<java classname="HealthProfileReader" classpath="${build.dir}">
			<arg value="xd"/>
			<arg value="asdf"/>
			<arg value="xd"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.JavaToXML">
		<echo message="Executing JavaToXML" />
		<java classname="bookstore.JavaToXML" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.JAXBMarshaller">
		<echo message="Executing JAXBMarshaller" />
		<java classname="bookstore.JAXBMarshaller" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.JAXBUnMarshaller">
		<echo message="Executing JAXBUnMarshaller" />
		<java classname="bookstore.JAXBUnMarshaller" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.dozerExample">
		<echo message="Executing Dozer Example" />
		<java classname="dozerproject.DozerMapperTest" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.HPJson">
		<echo message="Executing Health Profile Writer for Json" />
		<java classname="HealthProfileJson" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
</project>